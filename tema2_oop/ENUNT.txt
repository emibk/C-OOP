Cerințe comune tuturor temelor(barem):
1.Toate clasele vor conține obligatoriu constructori de inițializare(0.25p), parametrizați (0.25p) și  de  copiere(0.25p);  destructor(0.25p); 
operatorii „=”(0.5p), „>>”(0.5p), „<<”(0.5p)supraîncărcați corespunzător, moșteniri & encapsulare (0.5p)
2.Clasele  derivate  trebuie  sa  contina  constructori  parametrizati  (prin  care  sa  seevidentieze transmiterea parametrilor catre 
constructorul din clasa de baza)si destructori.(1p)
3.În fiecare proiect vor fi ilustrate conceptele de upcasting, downcasting, funcții virtuale (pure –unde se consideră mai natural)–1.5p (0.5p / cerință)
4.Utilizarea de variabile și de funcții statice–1p5.Citirea informațiilor complete a n obiecte,memorarea și afișarea acestora –0.5p
6.Meniu interactiv–0.5p
7.Rezolvarea corectă a cerințelor suplimentare corespunzatoare fiecarei teme –1.5p.
Se acordă punctaje parțiale corespunzător și 1p oficiu. -Dacă sursa nu compilează, se acorda nota 1 (punctul din oficiu).
Tema 1. Liste de numere întregi 1 (implementate dinamic)Se dau următoarele clase:
 -Nod (int info, Nod * next);
 -Nod_dublu (Nod * ante) : Nod;
 -LDI (elemente de tip Nod_dublu); // listă dublu înlănțuită-LSI  :  LDI;  //listă  simplu  înlănțuită,  obținută  mostenind  caracteristicile  unei  LDI  adaptate  la  o înlănțuire simplă;
